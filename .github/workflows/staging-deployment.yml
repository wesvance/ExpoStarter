name: Staging Deployment
on:
  push:
    branches:
      - staging
jobs:
  version-bump:
    name: Project Version Bump
    runs-on: ubuntu-latest
    steps:
      - name: üèó Setup repo
        uses: actions/checkout@v2

      - name: üèó Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: yarn

      - name: üì¶ Install dependencies
        run: yarn install

      - name: Setup Git
        run: |
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_NAME }}"

      - name: Run Standard Release
        run: yarn standard-version --release-as patch

      - name: Push Version to GitHub
        run: git push origin develop --set-upstream

  webapp-build:
    name: Web App Build - Staging
    runs-on: ubuntu-latest
    needs: version-bump
    steps:
      - name: üèó Setup repo
        uses: actions/checkout@v2

      - name: üèó Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: yarn

      - name: üì¶ Install dependencies
        run: yarn install

      - name: üèó Setup Expo
        uses: expo/expo-github-action@v7
        with:
          expo-version: 5.x
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: üì¶ Build Web App
        run: expo build:web

      - name: Run Tests
        run: yarn test --watchAll=false

      - name: Copy vercel.json into web-build
        run: cp ./vercel.json ./web-build

      - name: Vercel Action
        id: deploy-vercel
        uses: amondnet/vercel-action@v25.1.0
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./web-build
          scope: ${{ secrets.VERCEL_SCOPE }}
          vercel-args: '--staging'
          github-comment: false
          alias-domains: web-staging.starter.app

  eas-build:
    name: EAS App Build - Staging
    runs-on: ubuntu-latest
    needs: version-bump
    steps:
      - name: üèó Setup repo
        uses: actions/checkout@v2

      - name: Write Secrets to Temp File
        run: |
          mkdir ./tmp
          echo $GOOGLE_SERVICE_ACCOUNT >> ./tmp/google_service_account.json
          echo $APPLE_API_KEY | base64 -d >> ./tmp/apple_api_key.p8
        shell: bash
        env:
          GOOGLE_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
          APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}

      - name: üèó Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: yarn

      - name: üèó Setup Expo and EAS
        uses: expo/expo-github-action@v7
        with:
          expo-version: 5.x
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: üì¶ Install dependencies
        run: yarn install

      - name: Run Tests
        run: yarn test --watchAll=false

      - name: üöÄ Build app
        run: eas build --platform all --profile staging --non-interactive --auto-submit

  eas-update:
    name: EAS Hot Update
    runs-on: ubuntu-latest
    needs: version-bump
    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: yarn
      - uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      - name: Install dependencies
        run: yarn install
      - name: Publish update
        run: eas update --auto

  # Deploy the change to chromatic
  chromatic-deployment:
    name: Chromatic Docs Deployment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: yarn

      - name: Publish to Chromatic
        uses: chromaui/action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

      # Todo - Add your chromatic project id here
      # - name: Comment Chromatic Link
      #   uses: peter-evans/commit-comment@v1
      #   with:
      #     body: |
      #       [StoryBook Documentation][1]
      #       - [Chromatic Library][2]

      #       [1]: https://staging--id_here.chromatic.com
      #       [2]: https://chromatic.com/library?appId=id_here&branch=staging
